on: [push]
name: Azure Deployment
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    
      # Checkout code
    - uses: actions/checkout@main

    - name: Set image name using short git commit SHA as a tag
      id: vars
      run: |
        calculatedSha=$(git rev-parse --short ${{ github.sha }})
        echo "image_name=${{ vars.AZURE_ACI_ENDPOINT }}/openai-capps/chatbot:$calculatedSha" >> $GITHUB_OUTPUT

    - name: 'Docker Login'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ vars.AZURE_ACI_ENDPOINT }}
        username: ${{ secrets.AZURE_ACR_USERNAME }}
        password: ${{ secrets.AZURE_ACR_PASSWORD }}

    - name: Build the image and push it to ACR
      uses: docker/build-push-action@v4
      with:
        push: true
        tags: ${{ steps.vars.outputs.image_name }}
        context: ./apps/chatbot/src/

      # Login into Azure
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Deploy Bicep file        
    - name: deploy
      uses: azure/arm-deploy@v1
      with:
        deploymentName: ${{ secrets.AZURE_RG }}-${{ steps.vars.outputs.short_sha }}
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
        resourceGroupName: ${{ secrets.AZURE_RG }}
        template: apps/chatbot/infra/main.github.bicep
        parameters: 'name=${{ vars.AZURE_DEPLOYMENT_PREFIX }} chatBotImageName=${{ steps.vars.outputs.image_name }}'
        failOnStdErr: true
